<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="13.2">
  <zoom_level>10</zoom_level>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>340</x>
      <y>0</y>
      <w>441</w>
      <h>601</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Namespace&gt;&gt;
Input
--
+ connectedControllers : int
--
+ Init(void)
+ Shutdown(void)
+ HandleEvent(SDL_Event e)
+ RemoveKeyUpDownFlags(void)

// Getters
+ getAnyKey(void) : bool
+ getAnyKeyDown(void) : bool
+ getAnyKeyUp(void) : bool
+ getKey(SDL_Keycode) : bool
+ getKeyUp(SDL_Keycode) : bool
+ getKeyDown(SDL_Keycode) : bool
+ getMouse(MouseButton) : bool
+ getMouseUp(MouseButton) : bool
+ getMouseDown(MouseButton) : bool
+ getMousePositionX(void) : int
+ getMousePositionY(void) : int
+ getControllerAxis(int, SDL_GameControllerAxis) : float
+ getControllerButton(int, SDL_GameControllerBindType) : bool
+ getControllerButtonUp(int, SDL_GameControllerBindType) : bool
+ getControllerButtonDown(int, SDL_GameControllerBindType) : bool

//Keyboard:
- HandleKeyDown(SDL_Event e)
- HandleKeyUp(SDL_Event e)
//Mouse:
- HandleMouseMotion(SDL_Event e)
- HandleMouseButtonDown(SDL_Event e)
- HandleMouseButtonUp(SDL_Event e)
- HandleMouseWheel(SDL_Event e)
//Controller:
- HandleControllerDeviceRemoved(SDL_Event e)
- HandleControllerDeviceAdded(SDL_Event e)
- HandleControllerButtonDown(SDL_Event e)
- HandleControllerButtonUp(SDL_Event e)
- HandleControllerAxisMotion(SDL_Event e)
- HandleControllerDeviceRemapped(SDL_Event e)</panel_attributes>
    <additional_attributes/>
    <custom_code>setAutoresize(20,15,5);

int y=textHeight();

boolean center = true;
for(int i = 0; i &lt; textlines.size(); i++) {
	String textline = textlines.get(i);

	// Lets format some special characteres.
	textline = textline.replaceAll("&gt;&gt;", "»");
	textline = textline.replaceAll("&lt;&lt;", "«");

	// If we entered --, draw a line and set centered to false.
	if(textline.equals("--")) {
		drawLineHorizontal((int) (y-textHeight()*0.7));
		center = false;
		if (!isManualResized()) height -= (int) (textHeight()*0.75);
		y += textHeight()*0.3;
	}
	
	// If the line begins with static, we underline the line.
	else if (textline.split(" ", 2)[0].equals("static"))
	{
		if (center) y+= printCenter("_" + textline.split(" ", 2)[1] + "_",y);
		else y += printLeft("_" + textline.split(" ", 2)[1] + "_",y);
	}
	// Default: print text normally
	else {
		if (center) y += printCenter(textline,y); 
		else y += printLeft(textline,y);
	}
}

drawRectangle(0,0,onGrid(width),onGrid(height));</custom_code>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>480</x>
      <y>680</y>
      <w>121</w>
      <h>111</h>
    </coordinates>
    <panel_attributes>&lt;&lt;struct&gt;&gt;
KeyState
--
+ KeyDown : bool
+ KeyUp : bool
+ Key : bool
--
</panel_attributes>
    <additional_attributes/>
    <custom_code>setAutoresize(20,15,5);

int y=textHeight();

boolean center = true;
for(int i = 0; i &lt; textlines.size(); i++) {
	String textline = textlines.get(i);

	// Lets format some special characteres.
	textline = textline.replaceAll("&gt;&gt;", "»");
	textline = textline.replaceAll("&lt;&lt;", "«");

	// If we entered --, draw a line and set centered to false.
	if(textline.equals("--")) {
		drawLineHorizontal((int) (y-textHeight()*0.7));
		center = false;
		if (!isManualResized()) height -= (int) (textHeight()*0.75);
		y += textHeight()*0.3;
	}
	
	// If the line begins with static, we underline the line.
	else if (textline.split(" ", 2)[0].equals("static"))
	{
		if (center) y+= printCenter("_" + textline.split(" ", 2)[1] + "_",y);
		else y += printLeft("_" + textline.split(" ", 2)[1] + "_",y);
	}
	// Default: print text normally
	else {
		if (center) y += printCenter(textline,y); 
		else y += printLeft(textline,y);
	}
}

drawRectangle(0,0,onGrid(width),onGrid(height));</custom_code>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>530</x>
      <y>590</y>
      <w>190</w>
      <h>110</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2=SDL_NUM_SCANCODES</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0</additional_attributes>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>780</x>
      <y>680</y>
      <w>141</w>
      <h>111</h>
    </coordinates>
    <panel_attributes>&lt;&lt;struct&gt;&gt;
MouseState
--
+ x : int
+ y : int
+ WheelDistance : int
--
</panel_attributes>
    <additional_attributes/>
    <custom_code>setAutoresize(20,15,5);

int y=textHeight();

boolean center = true;
for(int i = 0; i &lt; textlines.size(); i++) {
	String textline = textlines.get(i);

	// Lets format some special characteres.
	textline = textline.replaceAll("&gt;&gt;", "»");
	textline = textline.replaceAll("&lt;&lt;", "«");

	// If we entered --, draw a line and set centered to false.
	if(textline.equals("--")) {
		drawLineHorizontal((int) (y-textHeight()*0.7));
		center = false;
		if (!isManualResized()) height -= (int) (textHeight()*0.75);
		y += textHeight()*0.3;
	}
	
	// If the line begins with static, we underline the line.
	else if (textline.split(" ", 2)[0].equals("static"))
	{
		if (center) y+= printCenter("_" + textline.split(" ", 2)[1] + "_",y);
		else y += printLeft("_" + textline.split(" ", 2)[1] + "_",y);
	}
	// Default: print text normally
	else {
		if (center) y += printCenter(textline,y); 
		else y += printLeft(textline,y);
	}
}

drawRectangle(0,0,onGrid(width),onGrid(height));</custom_code>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>770</x>
      <y>500</y>
      <w>100</w>
      <h>200</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2=1</panel_attributes>
    <additional_attributes>10.0;10.0;80.0;10.0;80.0;180.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>590</x>
      <y>720</y>
      <w>210</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2=3</panel_attributes>
    <additional_attributes>190.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>10</x>
      <y>660</y>
      <w>341</w>
      <h>171</h>
    </coordinates>
    <panel_attributes>&lt;&lt;struct&gt;&gt;
Controller
--
+ controller : SDL_GameController*
+ haptic : SDL_Haptic*
--
+ Rumble(float, int)
+ StopRumble(void)
+ getKey(SDL_GameControllerBindType) : bool
+ getKeyUp(SDL_GameControllerBindType) : bool
+ getKeyDown(SDL_GameControllerBindType) : bool</panel_attributes>
    <additional_attributes/>
    <custom_code>setAutoresize(20,15,5);

int y=textHeight();

boolean center = true;
for(int i = 0; i &lt; textlines.size(); i++) {
	String textline = textlines.get(i);

	// Lets format some special characteres.
	textline = textline.replaceAll("&gt;&gt;", "»");
	textline = textline.replaceAll("&lt;&lt;", "«");

	// If we entered --, draw a line and set centered to false.
	if(textline.equals("--")) {
		drawLineHorizontal((int) (y-textHeight()*0.7));
		center = false;
		if (!isManualResized()) height -= (int) (textHeight()*0.75);
		y += textHeight()*0.3;
	}
	
	// If the line begins with static, we underline the line.
	else if (textline.split(" ", 2)[0].equals("static"))
	{
		if (center) y+= printCenter("_" + textline.split(" ", 2)[1] + "_",y);
		else y += printLeft("_" + textline.split(" ", 2)[1] + "_",y);
	}
	// Default: print text normally
	else {
		if (center) y += printCenter(textline,y); 
		else y += printLeft(textline,y);
	}
}

drawRectangle(0,0,onGrid(width),onGrid(height));</custom_code>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>230</x>
      <y>500</y>
      <w>160</w>
      <h>180</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2=SDL_NumJoysticks()</panel_attributes>
    <additional_attributes>110.0;10.0;10.0;10.0;10.0;160.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>340</x>
      <y>720</y>
      <w>160</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2=15</panel_attributes>
    <additional_attributes>10.0;10.0;140.0;10.0</additional_attributes>
  </element>
</diagram>
