<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="13.2">
  <zoom_level>10</zoom_level>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>380</x>
      <y>870</y>
      <w>521</w>
      <h>211</h>
    </coordinates>
    <panel_attributes>Texture
--
- height : int
- width : int
- texutre : STL_Texture
--
+ free(void)
+ loadTexturFromFile(String, STL_Renderer) : bool
+ loadTextureFromRenderedText(String, SDL_Color) : bool
+ render(int, int, SDL_Renderer, SDL_Rect, double, SDL_Point, SDL_RenderFlip)
+ setAlpha(Uint8)
+ setBlendMode(SDL_BlendMode)
+ setColor(Uint8, Uint8, Uint8)</panel_attributes>
    <additional_attributes/>
    <custom_code>setAutoresize(20,15,5);

int y=textHeight();

boolean center = true;
for(int i = 0; i &lt; textlines.size(); i++) {
	String textline = textlines.get(i);

	// Lets format some special characteres.
	textline = textline.replaceAll("&gt;&gt;", "»");
	textline = textline.replaceAll("&lt;&lt;", "«");

	// If we entered --, draw a line and set centered to false.
	if(textline.equals("--")) {
		drawLineHorizontal((int) (y-textHeight()*0.7));
		center = false;
		if (!isManualResized()) height -= (int) (textHeight()*0.75);
		y += textHeight()*0.3;
	}
	
	// If the line begins with static, we underline the line.
	else if (textline.split(" ", 2)[0].equals("static"))
	{
		if (center) y+= printCenter("_" + textline.split(" ", 2)[1] + "_",y);
		else y += printLeft("_" + textline.split(" ", 2)[1] + "_",y);
	}
	// Default: print text normally
	else {
		if (center) y += printCenter(textline,y); 
		else y += printLeft(textline,y);
	}
}

drawRectangle(0,0,onGrid(width),onGrid(height));</custom_code>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>780</x>
      <y>620</y>
      <w>171</w>
      <h>51</h>
    </coordinates>
    <panel_attributes>GeometryRenderer
--
+ Shape : SDL_Point[1..*]
--</panel_attributes>
    <additional_attributes/>
    <custom_code>setAutoresize(20,15,5);

int y=textHeight();

boolean center = true;
for(int i = 0; i &lt; textlines.size(); i++) {
	String textline = textlines.get(i);

	// Lets format some special characteres.
	textline = textline.replaceAll("&gt;&gt;", "»");
	textline = textline.replaceAll("&lt;&lt;", "«");

	// If we entered --, draw a line and set centered to false.
	if(textline.equals("--")) {
		drawLineHorizontal((int) (y-textHeight()*0.7));
		center = false;
		if (!isManualResized()) height -= (int) (textHeight()*0.75);
		y += textHeight()*0.3;
	}
	
	// If the line begins with static, we underline the line.
	else if (textline.split(" ", 2)[0].equals("static"))
	{
		if (center) y+= printCenter("_" + textline.split(" ", 2)[1] + "_",y);
		else y += printLeft("_" + textline.split(" ", 2)[1] + "_",y);
	}
	// Default: print text normally
	else {
		if (center) y += printCenter(textline,y); 
		else y += printLeft(textline,y);
	}
}

drawRectangle(0,0,onGrid(width),onGrid(height));</custom_code>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>500</x>
      <y>720</y>
      <w>30</w>
      <h>170</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=*
m2=1</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;150.0</additional_attributes>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>590</x>
      <y>620</y>
      <w>181</w>
      <h>191</h>
    </coordinates>
    <panel_attributes>SpriteRenderer
--
- clipHeight : int
- clipWidth : int
- spriteClip : int
- spriteColumns : int
- spriteRows : int
- spriteClips : SDL_Rect*
- path : string
--
+ setCurrentClip(int)
- calculateSpriteClips(void)</panel_attributes>
    <additional_attributes/>
    <custom_code>setAutoresize(20,15,5);

int y=textHeight();

boolean center = true;
for(int i = 0; i &lt; textlines.size(); i++) {
	String textline = textlines.get(i);

	// Lets format some special characteres.
	textline = textline.replaceAll("&gt;&gt;", "»");
	textline = textline.replaceAll("&lt;&lt;", "«");

	// If we entered --, draw a line and set centered to false.
	if(textline.equals("--")) {
		drawLineHorizontal((int) (y-textHeight()*0.7));
		center = false;
		if (!isManualResized()) height -= (int) (textHeight()*0.75);
		y += textHeight()*0.3;
	}
	
	// If the line begins with static, we underline the line.
	else if (textline.split(" ", 2)[0].equals("static"))
	{
		if (center) y+= printCenter("_" + textline.split(" ", 2)[1] + "_",y);
		else y += printLeft("_" + textline.split(" ", 2)[1] + "_",y);
	}
	// Default: print text normally
	else {
		if (center) y += printCenter(textline,y); 
		else y += printLeft(textline,y);
	}
}

drawRectangle(0,0,onGrid(width),onGrid(height));</custom_code>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>440</x>
      <y>620</y>
      <w>141</w>
      <h>111</h>
    </coordinates>
    <panel_attributes>TextRenderer
--
+ Color : SDL_Color
+ Font : TTF_Font
+ Size : int
--
+ generate(String)</panel_attributes>
    <additional_attributes/>
    <custom_code>setAutoresize(20,15,5);

int y=textHeight();

boolean center = true;
for(int i = 0; i &lt; textlines.size(); i++) {
	String textline = textlines.get(i);

	// Lets format some special characteres.
	textline = textline.replaceAll("&gt;&gt;", "»");
	textline = textline.replaceAll("&lt;&lt;", "«");

	// If we entered --, draw a line and set centered to false.
	if(textline.equals("--")) {
		drawLineHorizontal((int) (y-textHeight()*0.7));
		center = false;
		if (!isManualResized()) height -= (int) (textHeight()*0.75);
		y += textHeight()*0.3;
	}
	
	// If the line begins with static, we underline the line.
	else if (textline.split(" ", 2)[0].equals("static"))
	{
		if (center) y+= printCenter("_" + textline.split(" ", 2)[1] + "_",y);
		else y += printLeft("_" + textline.split(" ", 2)[1] + "_",y);
	}
	// Default: print text normally
	else {
		if (center) y += printCenter(textline,y); 
		else y += printLeft(textline,y);
	}
}

drawRectangle(0,0,onGrid(width),onGrid(height));</custom_code>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>670</x>
      <y>800</y>
      <w>30</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=*
m2=1</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>590</x>
      <y>420</y>
      <w>171</w>
      <h>91</h>
    </coordinates>
    <panel_attributes>/*Renderer*/
--
+ Offset : Vector3
--
+ draw(void)
+ setLayer(RenderLayer)</panel_attributes>
    <additional_attributes/>
    <custom_code>setAutoresize(20,15,5);

int y=textHeight();

boolean center = true;
for(int i = 0; i &lt; textlines.size(); i++) {
	String textline = textlines.get(i);

	// Lets format some special characteres.
	textline = textline.replaceAll("&gt;&gt;", "»");
	textline = textline.replaceAll("&lt;&lt;", "«");

	// If we entered --, draw a line and set centered to false.
	if(textline.equals("--")) {
		drawLineHorizontal((int) (y-textHeight()*0.7));
		center = false;
		if (!isManualResized()) height -= (int) (textHeight()*0.75);
		y += textHeight()*0.3;
	}
	
	// If the line begins with static, we underline the line.
	else if (textline.split(" ", 2)[0].equals("static"))
	{
		if (center) y+= printCenter("_" + textline.split(" ", 2)[1] + "_",y);
		else y += printLeft("_" + textline.split(" ", 2)[1] + "_",y);
	}
	// Default: print text normally
	else {
		if (center) y += printCenter(textline,y); 
		else y += printLeft(textline,y);
	}
}

drawRectangle(0,0,onGrid(width),onGrid(height));</custom_code>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>500</x>
      <y>500</y>
      <w>200</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>180.0;10.0;180.0;80.0;10.0;80.0;10.0;120.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>670</x>
      <y>500</y>
      <w>30</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;120.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>670</x>
      <y>500</y>
      <w>220</w>
      <h>140</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;80.0;200.0;80.0;200.0;120.0</additional_attributes>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>420</x>
      <y>420</y>
      <w>151</w>
      <h>141</h>
    </coordinates>
    <panel_attributes>Sound
--
- sound : Mix_Chunk*
- path : string
--
+ free(void)
+ loadFromFile(String)
+ Play(void)
+ setVolume(Uint8)</panel_attributes>
    <additional_attributes/>
    <custom_code>setAutoresize(20,15,5);

int y=textHeight();

boolean center = true;
for(int i = 0; i &lt; textlines.size(); i++) {
	String textline = textlines.get(i);

	// Lets format some special characteres.
	textline = textline.replaceAll("&gt;&gt;", "»");
	textline = textline.replaceAll("&lt;&lt;", "«");

	// If we entered --, draw a line and set centered to false.
	if(textline.equals("--")) {
		drawLineHorizontal((int) (y-textHeight()*0.7));
		center = false;
		if (!isManualResized()) height -= (int) (textHeight()*0.75);
		y += textHeight()*0.3;
	}
	
	// If the line begins with static, we underline the line.
	else if (textline.split(" ", 2)[0].equals("static"))
	{
		if (center) y+= printCenter("_" + textline.split(" ", 2)[1] + "_",y);
		else y += printLeft("_" + textline.split(" ", 2)[1] + "_",y);
	}
	// Default: print text normally
	else {
		if (center) y += printCenter(textline,y); 
		else y += printLeft(textline,y);
	}
}

drawRectangle(0,0,onGrid(width),onGrid(height));</custom_code>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>250</x>
      <y>420</y>
      <w>161</w>
      <h>241</h>
    </coordinates>
    <panel_attributes>Music
--
- music : Mix_Music*
- path : string
--
+ free(void)
+ loadFromFile(String)
+ Play(Music)

_+ isPaused (void : bool)_
_+ isPlaying(void : bool)_
_+ Play(Music, bool)_
_+ Resume(void)_
_+ setVolume(Uint8)_
_+ Stop(void)_
_+ Toggle(void)_</panel_attributes>
    <additional_attributes/>
    <custom_code>setAutoresize(20,15,5);

int y=textHeight();

boolean center = true;
for(int i = 0; i &lt; textlines.size(); i++) {
	String textline = textlines.get(i);

	// Lets format some special characteres.
	textline = textline.replaceAll("&gt;&gt;", "»");
	textline = textline.replaceAll("&lt;&lt;", "«");

	// If we entered --, draw a line and set centered to false.
	if(textline.equals("--")) {
		drawLineHorizontal((int) (y-textHeight()*0.7));
		center = false;
		if (!isManualResized()) height -= (int) (textHeight()*0.75);
		y += textHeight()*0.3;
	}
	
	// If the line begins with static, we underline the line.
	else if (textline.split(" ", 2)[0].equals("static"))
	{
		if (center) y+= printCenter("_" + textline.split(" ", 2)[1] + "_",y);
		else y += printLeft("_" + textline.split(" ", 2)[1] + "_",y);
	}
	// Default: print text normally
	else {
		if (center) y += printCenter(textline,y); 
		else y += printLeft(textline,y);
	}
}

drawRectangle(0,0,onGrid(width),onGrid(height));</custom_code>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>150</x>
      <y>420</y>
      <w>81</w>
      <h>41</h>
    </coordinates>
    <panel_attributes>UserScripts
--

--</panel_attributes>
    <additional_attributes/>
    <custom_code>setAutoresize(20,15,5);

int y=textHeight();

boolean center = true;
for(int i = 0; i &lt; textlines.size(); i++) {
	String textline = textlines.get(i);

	// Lets format some special characteres.
	textline = textline.replaceAll("&gt;&gt;", "»");
	textline = textline.replaceAll("&lt;&lt;", "«");

	// If we entered --, draw a line and set centered to false.
	if(textline.equals("--")) {
		drawLineHorizontal((int) (y-textHeight()*0.7));
		center = false;
		if (!isManualResized()) height -= (int) (textHeight()*0.75);
		y += textHeight()*0.3;
	}
	
	// If the line begins with static, we underline the line.
	else if (textline.split(" ", 2)[0].equals("static"))
	{
		if (center) y+= printCenter("_" + textline.split(" ", 2)[1] + "_",y);
		else y += printLeft("_" + textline.split(" ", 2)[1] + "_",y);
	}
	// Default: print text normally
	else {
		if (center) y += printCenter(textline,y); 
		else y += printLeft(textline,y);
	}
}

drawRectangle(0,0,onGrid(width),onGrid(height));</custom_code>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>330</x>
      <y>0</y>
      <w>261</w>
      <h>161</h>
    </coordinates>
    <panel_attributes>GameObject
--
+ enabled : bool
--
+ AddComponent(Component)
+ GetComponents&lt;T&gt;() : T[*]
+ GetComponentsInChildren&lt;T&gt;() : T[*]
+ RemoveComponent(Component)
+ Update(void)
+ [GetComponent&lt;T&gt;() : T]</panel_attributes>
    <additional_attributes/>
    <custom_code>setAutoresize(20,15,5);

int y=textHeight();

boolean center = true;
for(int i = 0; i &lt; textlines.size(); i++) {
	String textline = textlines.get(i);

	// Lets format some special characteres.
	textline = textline.replaceAll("&gt;&gt;", "»");
	textline = textline.replaceAll("&lt;&lt;", "«");

	// If we entered --, draw a line and set centered to false.
	if(textline.equals("--")) {
		drawLineHorizontal((int) (y-textHeight()*0.7));
		center = false;
		if (!isManualResized()) height -= (int) (textHeight()*0.75);
		y += textHeight()*0.3;
	}
	
	// If the line begins with static, we underline the line.
	else if (textline.split(" ", 2)[0].equals("static"))
	{
		if (center) y+= printCenter("_" + textline.split(" ", 2)[1] + "_",y);
		else y += printLeft("_" + textline.split(" ", 2)[1] + "_",y);
	}
	// Default: print text normally
	else {
		if (center) y += printCenter(textline,y); 
		else y += printLeft(textline,y);
	}
}

drawRectangle(0,0,onGrid(width),onGrid(height));</custom_code>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>180</x>
      <y>280</y>
      <w>290</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>270.0;10.0;270.0;90.0;10.0;90.0;10.0;140.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>440</x>
      <y>280</y>
      <w>250</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0;230.0;90.0;230.0;140.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>440</x>
      <y>280</y>
      <w>80</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;90.0;60.0;90.0;60.0;140.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>320</x>
      <y>280</y>
      <w>150</w>
      <h>160</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;-</panel_attributes>
    <additional_attributes>130.0;10.0;130.0;90.0;10.0;90.0;10.0;140.0</additional_attributes>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>390</x>
      <y>220</y>
      <w>111</w>
      <h>71</h>
    </coordinates>
    <panel_attributes>/*Component*/
--
+ enabled : bool
--
+ Update(void)</panel_attributes>
    <additional_attributes/>
    <custom_code>setAutoresize(20,15,5);

int y=textHeight();

boolean center = true;
for(int i = 0; i &lt; textlines.size(); i++) {
	String textline = textlines.get(i);

	// Lets format some special characteres.
	textline = textline.replaceAll("&gt;&gt;", "»");
	textline = textline.replaceAll("&lt;&lt;", "«");

	// If we entered --, draw a line and set centered to false.
	if(textline.equals("--")) {
		drawLineHorizontal((int) (y-textHeight()*0.7));
		center = false;
		if (!isManualResized()) height -= (int) (textHeight()*0.75);
		y += textHeight()*0.3;
	}
	
	// If the line begins with static, we underline the line.
	else if (textline.split(" ", 2)[0].equals("static"))
	{
		if (center) y+= printCenter("_" + textline.split(" ", 2)[1] + "_",y);
		else y += printLeft("_" + textline.split(" ", 2)[1] + "_",y);
	}
	// Default: print text normally
	else {
		if (center) y += printCenter(textline,y); 
		else y += printLeft(textline,y);
	}
}

drawRectangle(0,0,onGrid(width),onGrid(height));</custom_code>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>440</x>
      <y>140</y>
      <w>30</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-



</panel_attributes>
    <additional_attributes>10.0;80.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>220</x>
      <y>80</y>
      <w>130</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>110.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>580</x>
      <y>80</y>
      <w>130</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>110.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>0</x>
      <y>0</y>
      <w>231</w>
      <h>241</h>
    </coordinates>
    <panel_attributes>Transform
--
+ Position : Vector3
+ Rotation : float
+ Scale : Vector2
- Children : Transform[*]*
- Parent : Transform*
--
+ GetChildren(void) : Transform[*]*
+ GetParent(void) : Transform*
+ Translate(Vector3)
+ Rotate(float)

+ SetParent(Transform*)
# AddChild(Transform*)
# RemoveChild(Transform*)
</panel_attributes>
    <additional_attributes/>
    <custom_code>setAutoresize(20,15,5);

int y=textHeight();

boolean center = true;
for(int i = 0; i &lt; textlines.size(); i++) {
	String textline = textlines.get(i);

	// Lets format some special characteres.
	textline = textline.replaceAll("&gt;&gt;", "»");
	textline = textline.replaceAll("&lt;&lt;", "«");

	// If we entered --, draw a line and set centered to false.
	if(textline.equals("--")) {
		drawLineHorizontal((int) (y-textHeight()*0.7));
		center = false;
		if (!isManualResized()) height -= (int) (textHeight()*0.75);
		y += textHeight()*0.3;
	}
	
	// If the line begins with static, we underline the line.
	else if (textline.split(" ", 2)[0].equals("static"))
	{
		if (center) y+= printCenter("_" + textline.split(" ", 2)[1] + "_",y);
		else y += printLeft("_" + textline.split(" ", 2)[1] + "_",y);
	}
	// Default: print text normally
	else {
		if (center) y += printCenter(textline,y); 
		else y += printLeft(textline,y);
	}
}

drawRectangle(0,0,onGrid(width),onGrid(height));</custom_code>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>690</x>
      <y>20</y>
      <w>241</w>
      <h>121</h>
    </coordinates>
    <panel_attributes>Scene
--
--
+ load(string)
+ save(string)
+ addGameObject(GameObject*)
+ removeGameObject(GameObject*)
+ Update(void)</panel_attributes>
    <additional_attributes/>
    <custom_code>setAutoresize(20,15,5);

int y=textHeight();

boolean center = true;
for(int i = 0; i &lt; textlines.size(); i++) {
	String textline = textlines.get(i);

	// Lets format some special characteres.
	textline = textline.replaceAll("&gt;&gt;", "»");
	textline = textline.replaceAll("&lt;&lt;", "«");

	// If we entered --, draw a line and set centered to false.
	if(textline.equals("--")) {
		drawLineHorizontal((int) (y-textHeight()*0.7));
		center = false;
		if (!isManualResized()) height -= (int) (textHeight()*0.75);
		y += textHeight()*0.3;
	}
	
	// If the line begins with static, we underline the line.
	else if (textline.split(" ", 2)[0].equals("static"))
	{
		if (center) y+= printCenter("_" + textline.split(" ", 2)[1] + "_",y);
		else y += printLeft("_" + textline.split(" ", 2)[1] + "_",y);
	}
	// Default: print text normally
	else {
		if (center) y += printCenter(textline,y); 
		else y += printLeft(textline,y);
	}
}

drawRectangle(0,0,onGrid(width),onGrid(height));</custom_code>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>860</x>
      <y>370</y>
      <w>201</w>
      <h>171</h>
    </coordinates>
    <panel_attributes>RenderLayer
--
+ enabled : bool
+ layer : int
+ renderer : SDL_Renderer*
+ camera : Camera*
--
+ Render(void)
+ addRenderer(Renderer*)
+ removeRenderer(Renderer*)
+ setCamera(Camera*)</panel_attributes>
    <additional_attributes/>
    <custom_code>setAutoresize(20,15,5);

int y=textHeight();

boolean center = true;
for(int i = 0; i &lt; textlines.size(); i++) {
	String textline = textlines.get(i);

	// Lets format some special characteres.
	textline = textline.replaceAll("&gt;&gt;", "»");
	textline = textline.replaceAll("&lt;&lt;", "«");

	// If we entered --, draw a line and set centered to false.
	if(textline.equals("--")) {
		drawLineHorizontal((int) (y-textHeight()*0.7));
		center = false;
		if (!isManualResized()) height -= (int) (textHeight()*0.75);
		y += textHeight()*0.3;
	}
	
	// If the line begins with static, we underline the line.
	else if (textline.split(" ", 2)[0].equals("static"))
	{
		if (center) y+= printCenter("_" + textline.split(" ", 2)[1] + "_",y);
		else y += printLeft("_" + textline.split(" ", 2)[1] + "_",y);
	}
	// Default: print text normally
	else {
		if (center) y += printCenter(textline,y); 
		else y += printLeft(textline,y);
	}
}

drawRectangle(0,0,onGrid(width),onGrid(height));</custom_code>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>750</x>
      <y>450</y>
      <w>130</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=*
m2=1</panel_attributes>
    <additional_attributes>10.0;10.0;110.0;10.0</additional_attributes>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>1190</x>
      <y>380</y>
      <w>201</w>
      <h>171</h>
    </coordinates>
    <panel_attributes>Camera
--
+ enabled : bool
+ transform : Transform
+ ViewPort : SDL_Rect*
--
+ Render(void)
+ addLayer(RenderLayer*)
+ removeLayer(RenderLayer*)
+ setViewport(SDL_Rect*)
+ setWindow(Window*)</panel_attributes>
    <additional_attributes/>
    <custom_code>setAutoresize(20,15,5);

int y=textHeight();

boolean center = true;
for(int i = 0; i &lt; textlines.size(); i++) {
	String textline = textlines.get(i);

	// Lets format some special characteres.
	textline = textline.replaceAll("&gt;&gt;", "»");
	textline = textline.replaceAll("&lt;&lt;", "«");

	// If we entered --, draw a line and set centered to false.
	if(textline.equals("--")) {
		drawLineHorizontal((int) (y-textHeight()*0.7));
		center = false;
		if (!isManualResized()) height -= (int) (textHeight()*0.75);
		y += textHeight()*0.3;
	}
	
	// If the line begins with static, we underline the line.
	else if (textline.split(" ", 2)[0].equals("static"))
	{
		if (center) y+= printCenter("_" + textline.split(" ", 2)[1] + "_",y);
		else y += printLeft("_" + textline.split(" ", 2)[1] + "_",y);
	}
	// Default: print text normally
	else {
		if (center) y += printCenter(textline,y); 
		else y += printLeft(textline,y);
	}
}

drawRectangle(0,0,onGrid(width),onGrid(height));</custom_code>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1050</x>
      <y>450</y>
      <w>160</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m1=1
m2=1..*</panel_attributes>
    <additional_attributes>140.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>1190</x>
      <y>180</y>
      <w>211</w>
      <h>141</h>
    </coordinates>
    <panel_attributes>Window
--
+ Renderer : SDL_Renderer*
+ ScreenHeight : int
+ ScreenWidth : int
+ Title : string
- renderWindow : SDL_Window*
--
+ Render(void)</panel_attributes>
    <additional_attributes/>
    <custom_code>setAutoresize(20,15,5);

int y=textHeight();

boolean center = true;
for(int i = 0; i &lt; textlines.size(); i++) {
	String textline = textlines.get(i);

	// Lets format some special characteres.
	textline = textline.replaceAll("&gt;&gt;", "»");
	textline = textline.replaceAll("&lt;&lt;", "«");

	// If we entered --, draw a line and set centered to false.
	if(textline.equals("--")) {
		drawLineHorizontal((int) (y-textHeight()*0.7));
		center = false;
		if (!isManualResized()) height -= (int) (textHeight()*0.75);
		y += textHeight()*0.3;
	}
	
	// If the line begins with static, we underline the line.
	else if (textline.split(" ", 2)[0].equals("static"))
	{
		if (center) y+= printCenter("_" + textline.split(" ", 2)[1] + "_",y);
		else y += printLeft("_" + textline.split(" ", 2)[1] + "_",y);
	}
	// Default: print text normally
	else {
		if (center) y += printCenter(textline,y); 
		else y += printLeft(textline,y);
	}
}

drawRectangle(0,0,onGrid(width),onGrid(height));</custom_code>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1290</x>
      <y>310</y>
      <w>30</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>1050</x>
      <y>70</y>
      <w>121</w>
      <h>51</h>
    </coordinates>
    <panel_attributes>Game
--
--
- GameLoop(void)</panel_attributes>
    <additional_attributes/>
    <custom_code>setAutoresize(20,15,5);

int y=textHeight();

boolean center = true;
for(int i = 0; i &lt; textlines.size(); i++) {
	String textline = textlines.get(i);

	// Lets format some special characteres.
	textline = textline.replaceAll("&gt;&gt;", "»");
	textline = textline.replaceAll("&lt;&lt;", "«");

	// If we entered --, draw a line and set centered to false.
	if(textline.equals("--")) {
		drawLineHorizontal((int) (y-textHeight()*0.7));
		center = false;
		if (!isManualResized()) height -= (int) (textHeight()*0.75);
		y += textHeight()*0.3;
	}
	
	// If the line begins with static, we underline the line.
	else if (textline.split(" ", 2)[0].equals("static"))
	{
		if (center) y+= printCenter("_" + textline.split(" ", 2)[1] + "_",y);
		else y += printLeft("_" + textline.split(" ", 2)[1] + "_",y);
	}
	// Default: print text normally
	else {
		if (center) y += printCenter(textline,y); 
		else y += printLeft(textline,y);
	}
}

drawRectangle(0,0,onGrid(width),onGrid(height));</custom_code>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>920</x>
      <y>80</y>
      <w>150</w>
      <h>30</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>130.0;10.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>1100</x>
      <y>110</y>
      <w>110</w>
      <h>150</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;130.0;90.0;130.0</additional_attributes>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>1270</x>
      <y>590</y>
      <w>241</w>
      <h>171</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Struct&gt;&gt;
Vector3
--
+ x : float
+ y : float
+ z : float
--
_+ Cross(Vector3, Vector3) : Vector3_
_+ Dot(Vector3, Vector3) : Vector3_
_+ Lerp(int, int, float) : Vector3_
_+ Slerp(int, int, float) : Vector3_</panel_attributes>
    <additional_attributes/>
    <custom_code>setAutoresize(20,15,5);

int y=textHeight();

boolean center = true;
for(int i = 0; i &lt; textlines.size(); i++) {
	String textline = textlines.get(i);

	// Lets format some special characteres.
	textline = textline.replaceAll("&gt;&gt;", "»");
	textline = textline.replaceAll("&lt;&lt;", "«");

	// If we entered --, draw a line and set centered to false.
	if(textline.equals("--")) {
		drawLineHorizontal((int) (y-textHeight()*0.7));
		center = false;
		if (!isManualResized()) height -= (int) (textHeight()*0.75);
		y += textHeight()*0.3;
	}
	
	// If the line begins with static, we underline the line.
	else if (textline.split(" ", 2)[0].equals("static"))
	{
		if (center) y+= printCenter("_" + textline.split(" ", 2)[1] + "_",y);
		else y += printLeft("_" + textline.split(" ", 2)[1] + "_",y);
	}
	// Default: print text normally
	else {
		if (center) y += printCenter(textline,y); 
		else y += printLeft(textline,y);
	}
}

drawRectangle(0,0,onGrid(width),onGrid(height));</custom_code>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>1010</x>
      <y>590</y>
      <w>241</w>
      <h>341</h>
    </coordinates>
    <panel_attributes>_Time_
--
_- time : float_
_- lastTime : float_
_- deltaTime : float_
_- unscaledTime : float_
_- unscaledLastTime : float_
_- unscaledDeltaTime : float_
_- timeScale : float_
_- fps : int_
_- frameCount : int_
--
_+ getTime(void) : float_
_+ getLastTime(void) : float_
_+ getDeltaTime(void) : float_
_+ getUnscaledTime(void) : float_
_+ getUnscaledLastTime(void) : float_
_+ getUnscaledDeltaTime(void) : float_
_+ getFPS(void) : int_
_+ getTimeScale(void) : float_
_+ setTimeScale(float)_</panel_attributes>
    <additional_attributes/>
    <custom_code>setAutoresize(20,15,5);

int y=textHeight();

boolean center = true;
for(int i = 0; i &lt; textlines.size(); i++) {
	String textline = textlines.get(i);

	// Lets format some special characteres.
	textline = textline.replaceAll("&gt;&gt;", "»");
	textline = textline.replaceAll("&lt;&lt;", "«");

	// If we entered --, draw a line and set centered to false.
	if(textline.equals("--")) {
		drawLineHorizontal((int) (y-textHeight()*0.7));
		center = false;
		if (!isManualResized()) height -= (int) (textHeight()*0.75);
		y += textHeight()*0.3;
	}
	
	// If the line begins with static, we underline the line.
	else if (textline.split(" ", 2)[0].equals("static"))
	{
		if (center) y+= printCenter("_" + textline.split(" ", 2)[1] + "_",y);
		else y += printLeft("_" + textline.split(" ", 2)[1] + "_",y);
	}
	// Default: print text normally
	else {
		if (center) y += printCenter(textline,y); 
		else y += printLeft(textline,y);
	}
}

drawRectangle(0,0,onGrid(width),onGrid(height));</custom_code>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>1270</x>
      <y>770</y>
      <w>241</w>
      <h>161</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Struct&gt;&gt;
Vector2
--
+ x : float
+ y : float
--
_+ Cross(Vector2, Vector2) : Vector2_
_+ Dot(Vector2, Vector2) : Vector2_
_+ Lerp(int, int, float) : Vector2_
_+ Slerp(int, int, float) : Vector2_</panel_attributes>
    <additional_attributes/>
    <custom_code>setAutoresize(20,15,5);

int y=textHeight();

boolean center = true;
for(int i = 0; i &lt; textlines.size(); i++) {
	String textline = textlines.get(i);

	// Lets format some special characteres.
	textline = textline.replaceAll("&gt;&gt;", "»");
	textline = textline.replaceAll("&lt;&lt;", "«");

	// If we entered --, draw a line and set centered to false.
	if(textline.equals("--")) {
		drawLineHorizontal((int) (y-textHeight()*0.7));
		center = false;
		if (!isManualResized()) height -= (int) (textHeight()*0.75);
		y += textHeight()*0.3;
	}
	
	// If the line begins with static, we underline the line.
	else if (textline.split(" ", 2)[0].equals("static"))
	{
		if (center) y+= printCenter("_" + textline.split(" ", 2)[1] + "_",y);
		else y += printLeft("_" + textline.split(" ", 2)[1] + "_",y);
	}
	// Default: print text normally
	else {
		if (center) y += printCenter(textline,y); 
		else y += printLeft(textline,y);
	}
}

drawRectangle(0,0,onGrid(width),onGrid(height));</custom_code>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>10</x>
      <y>680</y>
      <w>251</w>
      <h>111</h>
    </coordinates>
    <panel_attributes>Input
--
_- currentKeyStates : Uint8*_
--
_+ updateMouseCursor(bool)_
_+ displayMouseCursor(bool)_
_+ getKeyDown(SDL_Scancode) : bool_
</panel_attributes>
    <additional_attributes/>
    <custom_code>setAutoresize(20,15,5);

int y=textHeight();

boolean center = true;
for(int i = 0; i &lt; textlines.size(); i++) {
	String textline = textlines.get(i);

	// Lets format some special characteres.
	textline = textline.replaceAll("&gt;&gt;", "»");
	textline = textline.replaceAll("&lt;&lt;", "«");

	// If we entered --, draw a line and set centered to false.
	if(textline.equals("--")) {
		drawLineHorizontal((int) (y-textHeight()*0.7));
		center = false;
		if (!isManualResized()) height -= (int) (textHeight()*0.75);
		y += textHeight()*0.3;
	}
	
	// If the line begins with static, we underline the line.
	else if (textline.split(" ", 2)[0].equals("static"))
	{
		if (center) y+= printCenter("_" + textline.split(" ", 2)[1] + "_",y);
		else y += printLeft("_" + textline.split(" ", 2)[1] + "_",y);
	}
	// Default: print text normally
	else {
		if (center) y += printCenter(textline,y); 
		else y += printLeft(textline,y);
	}
}

drawRectangle(0,0,onGrid(width),onGrid(height));</custom_code>
  </element>
  <element>
    <type>CustomElementImpl</type>
    <coordinates>
      <x>80</x>
      <y>850</y>
      <w>91</w>
      <h>141</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Struct&gt;&gt;
MouseInput
--
+ LB : bool
+ MB : bool
+ RB : bool
+ xPos : int
+ yPos : int
--</panel_attributes>
    <additional_attributes/>
    <custom_code>setAutoresize(20,15,5);

int y=textHeight();

boolean center = true;
for(int i = 0; i &lt; textlines.size(); i++) {
	String textline = textlines.get(i);

	// Lets format some special characteres.
	textline = textline.replaceAll("&gt;&gt;", "»");
	textline = textline.replaceAll("&lt;&lt;", "«");

	// If we entered --, draw a line and set centered to false.
	if(textline.equals("--")) {
		drawLineHorizontal((int) (y-textHeight()*0.7));
		center = false;
		if (!isManualResized()) height -= (int) (textHeight()*0.75);
		y += textHeight()*0.3;
	}
	
	// If the line begins with static, we underline the line.
	else if (textline.split(" ", 2)[0].equals("static"))
	{
		if (center) y+= printCenter("_" + textline.split(" ", 2)[1] + "_",y);
		else y += printLeft("_" + textline.split(" ", 2)[1] + "_",y);
	}
	// Default: print text normally
	else {
		if (center) y += printCenter(textline,y); 
		else y += printLeft(textline,y);
	}
}

drawRectangle(0,0,onGrid(width),onGrid(height));</custom_code>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>110</x>
      <y>780</y>
      <w>30</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;10.0;10.0;70.0</additional_attributes>
  </element>
</diagram>
